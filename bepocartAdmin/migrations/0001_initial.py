# Generated by Django 5.1.3 on 2024-11-29 05:11

import django.core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('image', models.ImageField(upload_to='blog')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.CharField(default='Active', max_length=100)),
            ],
            options={
                'db_table': 'Blog',
            },
        ),
        migrations.CreateModel(
            name='Carousal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image', models.ImageField(upload_to='banner')),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('alt_text', models.CharField(blank=True, help_text='Alternative text for the image', max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'banner',
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1)),
                ('color', models.CharField(max_length=100, null=True)),
                ('size', models.CharField(max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'Cart',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image', models.ImageField(null=True, upload_to='category/')),
                ('slug', models.SlugField(max_length=250, null=True, unique=True)),
            ],
            options={
                'db_table': 'category',
            },
        ),
        migrations.CreateModel(
            name='Coin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(default=0)),
                ('source', models.CharField(max_length=100)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CoinValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coin', models.IntegerField()),
                ('value', models.FloatField()),
                ('login_value', models.IntegerField(default=10, null=True)),
                ('first_payment_value', models.IntegerField(default=100, null=True)),
                ('payment_value', models.FloatField(null=True)),
                ('referral_point', models.IntegerField(default=10, null=True)),
                ('review_reward', models.IntegerField(default=10, null=True)),
                ('birthday_reward', models.IntegerField(default=10, null=True)),
                ('anniversary_reward', models.IntegerField(default=10, null=True)),
                ('timestamp', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('link', models.URLField(blank=True, null=True)),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='OfferBanner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image', models.ImageField(upload_to='offer_banner')),
            ],
            options={
                'db_table': 'Offer_Banner',
            },
        ),
        migrations.CreateModel(
            name='OfferSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('offer_type', models.CharField(help_text='Select BUY or SPEND', max_length=100)),
                ('amount', models.IntegerField(blank=True, help_text='Amount for BUY or SPEND', null=True)),
                ('get_option', models.IntegerField(help_text='Option for GET', null=True)),
                ('get_value', models.IntegerField(blank=True, help_text='Free quantity', null=True)),
                ('method', models.CharField(help_text='Select FREE or % OFF', max_length=100)),
                ('discount_percentage', models.DecimalField(blank=True, decimal_places=2, help_text='Discount percentage if method is % OFF', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('start_date', models.DateTimeField(help_text='Start date of the offer')),
                ('end_date', models.DateTimeField(help_text='End date of the offer')),
                ('offer_active', models.BooleanField(default=False, null=True)),
                ('messages', models.CharField(help_text='Additional messages for the offer', max_length=500, null=True)),
                ('coupon_user_limit', models.IntegerField(blank=True, help_text='Maximum usage per user for coupons', null=True)),
                ('coupon_use_order_limit', models.IntegerField(blank=True, help_text='Maximum usage per order for coupons', null=True)),
                ('shipping_charge', models.IntegerField(default=0, help_text='Shipping charge applicable with the offer')),
                ('is_active', models.BooleanField(default=True, help_text='Active status of the offer')),
            ],
            options={
                'db_table': 'Offer Schedule',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=250, null=True, unique=True)),
                ('short_description', models.TextField(blank=True, null=True)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('salePrice', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='products/')),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('type', models.CharField(choices=[('single', 'Single Product'), ('variant', 'Variant Product')], default='single', max_length=10, null=True)),
            ],
            options={
                'db_table': 'product',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProductColorStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(max_length=100)),
                ('stock', models.PositiveIntegerField()),
                ('image1', models.ImageField(blank=True, max_length=200, upload_to='products/')),
                ('image2', models.ImageField(blank=True, max_length=200, upload_to='products/')),
                ('image3', models.ImageField(blank=True, max_length=200, upload_to='products/')),
                ('image4', models.ImageField(blank=True, max_length=200, upload_to='products/')),
                ('image5', models.ImageField(blank=True, max_length=200, upload_to='products/')),
            ],
            options={
                'db_table': 'ProductColorStock',
            },
        ),
        migrations.CreateModel(
            name='ProductVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(max_length=100)),
                ('image1', models.ImageField(blank=True, max_length=200, upload_to='products/')),
                ('image2', models.ImageField(blank=True, max_length=200, upload_to='products/')),
                ('image3', models.ImageField(blank=True, max_length=200, upload_to='products/')),
                ('image4', models.ImageField(blank=True, max_length=200, upload_to='products/')),
                ('image5', models.ImageField(blank=True, max_length=200, upload_to='products/')),
            ],
            options={
                'db_table': 'ProductVariant',
            },
        ),
        migrations.CreateModel(
            name='ProductVarientSizeStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(max_length=100)),
                ('stock', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'Size',
            },
        ),
        migrations.CreateModel(
            name='Subcategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=250, null=True, unique=True)),
                ('image', models.ImageField(null=True, upload_to='Subcategory/')),
            ],
            options={
                'db_table': 'Subcategory',
            },
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'Whishlist',
            },
        ),
    ]
